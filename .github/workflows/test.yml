name: pip - Build Lint Test and Coverage

on:
  push:
    branches: [ main, "v*"]
  pull_request:
    branches: [ main, "v*"]

jobs:
  build-lint-test-coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Get git tags
        run:  git fetch --prune --unshallow --tags
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies

    # # Use poetry to install dependencies
    #   - name: Install dependencies
    #     run: |
    #       python -m pip install --upgrade pip
    #       python -m pip install poetry
    #       poetry install --no-cache
    # # Run linting
    #   - name: Lint with black
    #     run: poetry run black --check src tests
    # # Run the tests
    #   - name: Run tests
    #     run: |
    #       pytest --cov=src --cov-report=xml
      # # Use pip to install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install pytest pytest-cov pytest-benchmark
      # Run tests
      # - name: Run tests
      #   run: |
      # #     pytest -vvv --cov=src --cov-report=xml
      # - name: Coverage report to coveralls
      #   uses: coverallsapp/github-action@v2.0.0
      #   with:
      #     github-token: ${{ secrets.COVERALLS_TOKEN }}
      #     path-to-lcov: coverage.xml
      - name: Install Debugging Tools
        run: sudo apt-get install gdb
      - name: Run Tests
        run: pytest --cov=src --cov-report=xml tests/test_integration.py
      - name: Check for Core Dumps
        run: |
          if ls core* 1> /dev/null 2>&1; then
            gdb -c core* -ex "thread apply all bt" -ex "set pagination 0" -batch
          fi
      - name: Upload Core Dumps if Exist
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: core-dumps
          path: core*
    