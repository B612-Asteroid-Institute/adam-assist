[project]
name = "adam-assist"
dynamic = ["version"]
description = 'ADAM Core Propagator class using ASSIST'
authors = [
    { name = "Alec Koumjian", email = "akoumjian@gmail.com" },
    { name = "Kathleen Kiker" }
]
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["astronomy", "orbital mechanics", "propagation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Astronomy"
]
requires-python = ">=3.11,<3.13"
dependencies = [
    "adam-core>=0.4.0",
    "naif-de440",
    "jpl-small-bodies-de441-n16",
    # Temporary until SPK support is merged and released upstream
    "assist-adam-fork==1.1.9.post1",
    "numpy",
    "ray",
    "spiceypy>=6.0.0",
    "rebound<=4.4.10", # Pin the version of rebound until we can determine accuracy issues with 4.4.10
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.build]
includes = ["src/adam_assist/"]

[tool.pdm.version]
source = "scm"
write_to = "adam_assist/version.py"
write_template = "__version__ = '{}'"

[project.urls]
"Documentation" = "https://github.com/B612-Asteroid-Institute/adam-assist#readme"
"Issues" = "https://github.com/B612-Asteroid-Institute/adam-assist/issues"
"Source" = "https://github.com/B612-Asteroid-Institute/adam-assist"

[project.optional-dependencies]
dev = [
    "ruff",
    "pdm",
    "mypy",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-benchmark",
    "black",
    "isort",
    "ipython",
]

[tool.pdm.scripts]
check = {composite = ["lint", "typecheck"]}
format = { composite = ["black ./src/adam_assist", "isort ./src/adam_assist"]}
lint = { composite = ["ruff check ./src/adam_assist", "black --check ./src/adam_assist", "isort --check-only ./src/adam_assist"] }
fix = "ruff check ./src/adam_assist --fix"
typecheck = "mypy --strict ./src/adam_assist"

test = "pytest --benchmark-skip {args}"
doctest = "pytest --doctest-plus --doctest-only"
benchmark = "pytest --benchmark-only"
coverage = "pytest --cov=src --cov-report=xml"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"

[tool.mypy]
ignore_missing_imports = true

